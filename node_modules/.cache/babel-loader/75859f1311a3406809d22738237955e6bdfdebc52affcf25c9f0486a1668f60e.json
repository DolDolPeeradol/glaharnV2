{"ast":null,"code":"var _jsxFileName = \"/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/StatusDebtor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Paper, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StatusDebtor() {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [totalAmounts, setTotalAmounts] = useState({});\n  const [payments, setPayments] = useState({});\n  const [status, setStatus] = useState({});\n\n  // Fetching stored data from localStorage when the component mounts\n  useEffect(() => {\n    const storedParticipants = JSON.parse(localStorage.getItem(\"participants\")) || [];\n    const storedTotalAmounts = JSON.parse(localStorage.getItem(\"totalAmounts\")) || {};\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\")) || {};\n    setParticipants(storedParticipants);\n    setTotalAmounts(storedTotalAmounts);\n    setPayments(storedPayments);\n    const initialStatus = {};\n    storedParticipants.forEach(participant => {\n      initialStatus[participant] = \"Pending\"; // Set initial status\n    });\n    setStatus(initialStatus);\n  }, []);\n\n  // Handle payment input updates and save to localStorage\n  const handlePaymentChange = (participant, amount) => {\n    var _totalAmounts$partici;\n    const updatedPayments = {\n      ...payments,\n      [participant]: parseFloat(amount) || 0\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n\n    // Update status based on payment\n    if (updatedPayments[participant] >= ((_totalAmounts$partici = totalAmounts[participant]) === null || _totalAmounts$partici === void 0 ? void 0 : _totalAmounts$partici.total)) {\n      setStatus(prevStatus => ({\n        ...prevStatus,\n        [participant]: \"Paid\"\n      }));\n    } else {\n      setStatus(prevStatus => ({\n        ...prevStatus,\n        [participant]: \"Pending\"\n      }));\n    }\n  };\n\n  // Calculate remaining amount for each participant\n  const calculateRemaining = participant => {\n    var _totalAmounts$partici2;\n    const totalAmount = ((_totalAmounts$partici2 = totalAmounts[participant]) === null || _totalAmounts$partici2 === void 0 ? void 0 : _totalAmounts$partici2.total) || 0;\n    const paidAmount = payments[participant] || 0;\n    return totalAmount - paidAmount;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Status of Debtors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Participant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount Owed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Update Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: participants.map(participant => {\n            var _totalAmounts$partici3;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (_totalAmounts$partici3 = totalAmounts[participant]) !== null && _totalAmounts$partici3 !== void 0 && _totalAmounts$partici3.total ? totalAmounts[participant].total.toFixed(2) + \" B\" : \"0.00 B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: payments[participant] ? payments[participant].toFixed(2) : \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: calculateRemaining(participant).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: status[participant]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  label: \"Payment\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  value: payments[participant] || \"\",\n                  onChange: e => handlePaymentChange(participant, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, participant, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusDebtor, \"qpfjfCTLpS3HjZc6Xf1QKvcocdk=\");\n_c = StatusDebtor;\nvar _c;\n$RefreshReg$(_c, \"StatusDebtor\");","map":{"version":3,"names":["React","useState","useEffect","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","TextField","jsxDEV","_jsxDEV","StatusDebtor","_s","participants","setParticipants","totalAmounts","setTotalAmounts","payments","setPayments","status","setStatus","storedParticipants","JSON","parse","localStorage","getItem","storedTotalAmounts","storedPayments","initialStatus","forEach","participant","handlePaymentChange","amount","_totalAmounts$partici","updatedPayments","parseFloat","setItem","stringify","total","prevStatus","calculateRemaining","_totalAmounts$partici2","totalAmount","paidAmount","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","map","_totalAmounts$partici3","toFixed","type","label","size","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/StatusDebtor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Paper,\n  TextField,\n} from \"@mui/material\";\n\nexport default function StatusDebtor() {\n  const [participants, setParticipants] = useState([]);\n  const [totalAmounts, setTotalAmounts] = useState({});\n  const [payments, setPayments] = useState({});\n  const [status, setStatus] = useState({});\n\n  // Fetching stored data from localStorage when the component mounts\n  useEffect(() => {\n    const storedParticipants = JSON.parse(localStorage.getItem(\"participants\")) || [];\n    const storedTotalAmounts = JSON.parse(localStorage.getItem(\"totalAmounts\")) || {};\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\")) || {};\n\n    setParticipants(storedParticipants);\n    setTotalAmounts(storedTotalAmounts);\n    setPayments(storedPayments);\n    const initialStatus = {};\n    storedParticipants.forEach(participant => {\n      initialStatus[participant] = \"Pending\"; // Set initial status\n    });\n    setStatus(initialStatus);\n  }, []);\n\n  // Handle payment input updates and save to localStorage\n  const handlePaymentChange = (participant, amount) => {\n    const updatedPayments = {\n      ...payments,\n      [participant]: parseFloat(amount) || 0,\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n\n    // Update status based on payment\n    if (updatedPayments[participant] >= totalAmounts[participant]?.total) {\n      setStatus((prevStatus) => ({\n        ...prevStatus,\n        [participant]: \"Paid\",\n      }));\n    } else {\n      setStatus((prevStatus) => ({\n        ...prevStatus,\n        [participant]: \"Pending\",\n      }));\n    }\n  };\n\n  // Calculate remaining amount for each participant\n  const calculateRemaining = (participant) => {\n    const totalAmount = totalAmounts[participant]?.total || 0;\n    const paidAmount = payments[participant] || 0;\n    return totalAmount - paidAmount;\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Status of Debtors\n      </Typography>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Participant</TableCell>\n              <TableCell>Amount Owed</TableCell>\n              <TableCell>Amount Paid</TableCell>\n              <TableCell>Remaining</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Update Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {participants.map((participant) => (\n              <TableRow key={participant}>\n                <TableCell>{participant}</TableCell>\n                <TableCell>\n                  {totalAmounts[participant]?.total\n                    ? totalAmounts[participant].total.toFixed(2) + \" B\"\n                    : \"0.00 B\"}\n                </TableCell>\n                <TableCell>\n                  {payments[participant] ? payments[participant].toFixed(2) : \"0.00\"}\n                </TableCell>\n                <TableCell>\n                  {calculateRemaining(participant).toFixed(2)}\n                </TableCell>\n                <TableCell>\n                  {status[participant]}\n                </TableCell>\n                <TableCell>\n                  <TextField\n                    type=\"number\"\n                    label=\"Payment\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={payments[participant] || \"\"}\n                    onChange={(e) => handlePaymentChange(participant, e.target.value)}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}