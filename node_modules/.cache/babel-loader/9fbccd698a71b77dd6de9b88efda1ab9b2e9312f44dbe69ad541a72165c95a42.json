{"ast":null,"code":"var _jsxFileName = \"/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/Summary.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Paper, Typography, Button, Grid, Divider } from '@mui/material';\nimport { QRCode } from 'react-qrcode-logo';\nimport * as htmlToImage from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = () => {\n  _s();\n  const location = useLocation();\n  const {\n    totalSummary = {},\n    foodItems = []\n  } = location.state || {}; // Default values\n\n  const qrCodeValue = \"https://example.com/payment\";\n  const saveAsImage = () => {\n    const summaryNode = document.getElementById('summary-slip');\n    htmlToImage.toPng(summaryNode).then(function (dataUrl) {\n      const link = document.createElement('a');\n      link.download = 'summary-slip.png';\n      link.href = dataUrl;\n      link.click();\n    });\n  };\n  const saveAsPdf = () => {\n    const summaryNode = document.getElementById('summary-slip');\n    htmlToImage.toPng(summaryNode).then(function (dataUrl) {\n      const pdf = new jsPDF();\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 180, 240);\n      pdf.save('summary-slip.pdf');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: '#f4f4f4',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      id: \"summary-slip\",\n      elevation: 3,\n      sx: {\n        p: 4,\n        borderRadius: 4,\n        maxWidth: 600,\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Payment Summary Slip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), foodItems.map((food, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: food.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            color: 'gray'\n          },\n          children: [food.price.toFixed(2), \" Baht\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Shared by: \", food.participants.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Total Amount Owed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), Object.keys(totalSummary).map(participant => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 1\n          },\n          children: [participant, \": \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [totalSummary[participant].toFixed(2), \" Baht\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this)]\n        }, participant, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          my: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrCodeValue,\n          size: 120\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        align: \"center\",\n        sx: {\n          color: 'gray',\n          mb: 2\n        },\n        children: \"Scan the QR code to complete the payment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: saveAsImage,\n            children: \"Save as Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            fullWidth: true,\n            onClick: saveAsPdf,\n            children: \"Save as PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Summary, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","Box","Paper","Typography","Button","Grid","Divider","QRCode","htmlToImage","jsPDF","useLocation","jsxDEV","_jsxDEV","Summary","_s","location","totalSummary","foodItems","state","qrCodeValue","saveAsImage","summaryNode","document","getElementById","toPng","then","dataUrl","link","createElement","download","href","click","saveAsPdf","pdf","addImage","save","sx","p","backgroundColor","display","justifyContent","alignItems","minHeight","children","id","elevation","borderRadius","maxWidth","width","variant","gutterBottom","align","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","mb","map","food","index","name","color","price","toFixed","participants","join","my","Object","keys","participant","value","size","container","spacing","item","xs","fullWidth","onClick","_c","$RefreshReg$"],"sources":["/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/Summary.js"],"sourcesContent":["import React from 'react';\nimport { Box, Paper, Typography, Button, Grid, Divider } from '@mui/material';\nimport { QRCode } from 'react-qrcode-logo';\nimport * as htmlToImage from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport { useLocation } from 'react-router-dom';\n\nconst Summary = () => {\n  const location = useLocation();\n  const { totalSummary = {}, foodItems = [] } = location.state || {}; // Default values\n\n  const qrCodeValue = \"https://example.com/payment\";\n\n  const saveAsImage = () => {\n    const summaryNode = document.getElementById('summary-slip');\n    htmlToImage.toPng(summaryNode)\n      .then(function (dataUrl) {\n        const link = document.createElement('a');\n        link.download = 'summary-slip.png';\n        link.href = dataUrl;\n        link.click();\n      });\n  };\n\n  const saveAsPdf = () => {\n    const summaryNode = document.getElementById('summary-slip');\n    htmlToImage.toPng(summaryNode)\n      .then(function (dataUrl) {\n        const pdf = new jsPDF();\n        pdf.addImage(dataUrl, 'PNG', 10, 10, 180, 240);\n        pdf.save('summary-slip.pdf');\n      });\n  };\n\n  return (\n    <Box\n      sx={{\n        p: 3,\n        backgroundColor: '#f4f4f4',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n      }}\n    >\n      <Paper\n        id=\"summary-slip\"\n        elevation={3}\n        sx={{\n          p: 4,\n          borderRadius: 4,\n          maxWidth: 600,\n          width: '100%',\n          backgroundColor: 'white',\n        }}\n      >\n        <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold' }}>\n          Payment Summary Slip\n        </Typography>\n\n        <Divider sx={{ mb: 2 }} />\n\n        {/* Display Food Items and Prices */}\n        {foodItems.map((food, index) => (\n          <Box key={index} sx={{ mb: 2 }}>\n            <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n              {food.name}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ color: 'gray' }}>\n              {food.price.toFixed(2)} Baht\n            </Typography>\n            <Typography variant=\"body2\">\n              Shared by: {food.participants.join(', ')}\n            </Typography>\n          </Box>\n        ))}\n\n        <Divider sx={{ my: 2 }} />\n\n        {/* Total per participant */}\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"h5\" gutterBottom>\n            Total Amount Owed\n          </Typography>\n          {Object.keys(totalSummary).map((participant) => (\n            <Typography key={participant} variant=\"body1\" sx={{ mb: 1 }}>\n              {participant}: <strong>{totalSummary[participant].toFixed(2)} Baht</strong>\n            </Typography>\n          ))}\n        </Box>\n\n        {/* QR Code Section */}\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            my: 3,\n          }}\n        >\n          <QRCode value={qrCodeValue} size={120} />\n        </Box>\n\n        <Typography variant=\"body2\" align=\"center\" sx={{ color: 'gray', mb: 2 }}>\n          Scan the QR code to complete the payment.\n        </Typography>\n\n        {/* Save Buttons */}\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              onClick={saveAsImage}\n            >\n              Save as Image\n            </Button>\n          </Grid>\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              fullWidth\n              onClick={saveAsPdf}\n            >\n              Save as PDF\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Summary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}