{"ast":null,"code":"var _jsxFileName = \"/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/Summary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport QRCode from 'qrcode.react'; // For generating QR codes\nimport { saveAs } from 'file-saver'; // For saving as an image or PDF\nimport html2canvas from 'html2canvas'; // For capturing the summary as an image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = () => {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [qrCodeImage, setQrCodeImage] = useState(null); // To store user's QR code\n\n  useEffect(() => {\n    const storedParticipants = JSON.parse(localStorage.getItem('participants')) || [];\n    const storedFoodItems = JSON.parse(localStorage.getItem('foodItems')) || [];\n    if (storedParticipants.length > 0 && storedFoodItems.length > 0) {\n      setParticipants(storedParticipants);\n      setFoodItems(storedFoodItems);\n      // Calculate total amount\n      const total = storedFoodItems.reduce((acc, item) => acc + item.price, 0);\n      setTotalAmount(total);\n    }\n  }, []);\n  const handleSaveAsImage = () => {\n    const element = document.getElementById('summary');\n    html2canvas(element).then(canvas => {\n      canvas.toBlob(blob => {\n        saveAs(blob, 'summary.png');\n      });\n    });\n  };\n  const handleSaveAsPDF = () => {\n    // Implement PDF saving logic here if needed\n  };\n  const handleQrCodeUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setQrCodeImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    padding: 2,\n    children: participants.length === 0 || foodItems.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"Please fill in the Check Bill details first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      id: \"summary\",\n      sx: {\n        border: '1px solid #ccc',\n        padding: 2,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Summary Slip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), participants.map(participant => /*#__PURE__*/_jsxDEV(Typography, {\n        children: [participant.name, \" - Total: \", participant.amount, \" THB\"]\n      }, participant.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Food Items:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), foodItems.map(item => /*#__PURE__*/_jsxDEV(Typography, {\n        children: [item.name, \" - Price: \", item.price, \" THB\"]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Total Amount: \", totalAmount, \" THB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginTop: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Upload your QR Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleQrCodeUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), qrCodeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrCodeImage,\n          alt: \"QR Code\",\n          style: {\n            width: '150px',\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginTop: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSaveAsImage,\n          children: \"Save as Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSaveAsPDF,\n          sx: {\n            marginLeft: 2\n          },\n          children: \"Save as PDF (Coming Soon)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Summary, \"n0vv7a6fnTedXigBs5rIKdXXXOY=\");\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useEffect","useState","Button","Typography","Box","QRCode","saveAs","html2canvas","jsxDEV","_jsxDEV","Summary","_s","participants","setParticipants","foodItems","setFoodItems","totalAmount","setTotalAmount","qrCodeImage","setQrCodeImage","storedParticipants","JSON","parse","localStorage","getItem","storedFoodItems","length","total","reduce","acc","item","price","handleSaveAsImage","element","document","getElementById","then","canvas","toBlob","blob","handleSaveAsPDF","handleQrCodeUpload","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","padding","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","id","sx","border","borderRadius","gutterBottom","map","participant","name","amount","marginTop","type","accept","onChange","src","alt","style","width","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/Summary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport QRCode from 'qrcode.react'; // For generating QR codes\nimport { saveAs } from 'file-saver'; // For saving as an image or PDF\nimport html2canvas from 'html2canvas'; // For capturing the summary as an image\n\nconst Summary = () => {\n    const [participants, setParticipants] = useState([]);\n    const [foodItems, setFoodItems] = useState([]);\n    const [totalAmount, setTotalAmount] = useState(0);\n    const [qrCodeImage, setQrCodeImage] = useState(null); // To store user's QR code\n\n    useEffect(() => {\n        const storedParticipants = JSON.parse(localStorage.getItem('participants')) || [];\n        const storedFoodItems = JSON.parse(localStorage.getItem('foodItems')) || [];\n\n        if (storedParticipants.length > 0 && storedFoodItems.length > 0) {\n            setParticipants(storedParticipants);\n            setFoodItems(storedFoodItems);\n            // Calculate total amount\n            const total = storedFoodItems.reduce((acc, item) => acc + item.price, 0);\n            setTotalAmount(total);\n        }\n    }, []);\n\n    const handleSaveAsImage = () => {\n        const element = document.getElementById('summary');\n        html2canvas(element).then((canvas) => {\n            canvas.toBlob((blob) => {\n                saveAs(blob, 'summary.png');\n            });\n        });\n    };\n\n    const handleSaveAsPDF = () => {\n        // Implement PDF saving logic here if needed\n    };\n\n    const handleQrCodeUpload = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setQrCodeImage(reader.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    return (\n        <Box padding={2}>\n            {participants.length === 0 || foodItems.length === 0 ? (\n                <Typography variant=\"h6\" color=\"error\">\n                    Please fill in the Check Bill details first.\n                </Typography>\n            ) : (\n                <Box id=\"summary\" sx={{ border: '1px solid #ccc', padding: 2, borderRadius: 2 }}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Summary Slip\n                    </Typography>\n                    {participants.map((participant) => (\n                        <Typography key={participant.name}>\n                            {participant.name} - Total: {participant.amount} THB\n                        </Typography>\n                    ))}\n                    <Typography variant=\"h6\">Food Items:</Typography>\n                    {foodItems.map((item) => (\n                        <Typography key={item.name}>\n                            {item.name} - Price: {item.price} THB\n                        </Typography>\n                    ))}\n                    <Typography variant=\"h6\">Total Amount: {totalAmount} THB</Typography>\n\n                    <Box marginTop={2}>\n                        <Typography variant=\"h6\">Upload your QR Code:</Typography>\n                        <input type=\"file\" accept=\"image/*\" onChange={handleQrCodeUpload} />\n                        {qrCodeImage && <img src={qrCodeImage} alt=\"QR Code\" style={{ width: '150px', marginTop: '10px' }} />}\n                    </Box>\n\n                    <Box marginTop={2}>\n                        <Button variant=\"contained\" onClick={handleSaveAsImage}>\n                            Save as Image\n                        </Button>\n                        <Button variant=\"contained\" onClick={handleSaveAsPDF} sx={{ marginLeft: 2 }}>\n                            Save as PDF (Coming Soon)\n                        </Button>\n                    </Box>\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default Summary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}