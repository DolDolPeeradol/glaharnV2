{"ast":null,"code":"var _jsxFileName = \"/Users/dolpeeradol/Desktop/General/Deploy_Project/glaharnV2/src/components/Checkbill.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, List, ListItem, ListItemText, Typography, Grid, Paper, Chip, Box, IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { motion } from \"framer-motion\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RestaurantMenuIcon from \"@mui/icons-material/RestaurantMenu\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { useSnackbar } from \"notistack\";\nimport { v4 as uuidv4 } from \"uuid\"; // For unique IDs\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadFromLocalStorage = key => {\n  const data = localStorage.getItem(key);\n  return data ? JSON.parse(data) : [];\n};\nconst saveToLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\nconst CheckBill = () => {\n  _s();\n  const history = useHistory(); // Initialize useHistory\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [participants, setParticipants] = useState(loadFromLocalStorage(\"participants\"));\n  const [participantName, setParticipantName] = useState(\"\");\n  const [foodItems, setFoodItems] = useState(loadFromLocalStorage(\"foodItems\"));\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodPrice, setFoodPrice] = useState(\"\");\n  const [selectedParticipants, setSelectedParticipants] = useState({});\n  const [editingFoodId, setEditingFoodId] = useState(null);\n  useEffect(() => {\n    saveToLocalStorage(\"participants\", participants);\n    saveToLocalStorage(\"foodItems\", foodItems);\n  }, [participants, foodItems]);\n  useEffect(() => {\n    const storedFoodItems = JSON.parse(localStorage.getItem(\"foodItems\")) || [];\n    setFoodItems(storedFoodItems);\n  }, []);\n  const handleAddParticipant = () => {\n    if (participantName.trim() && !participants.includes(participantName.trim())) {\n      setParticipants([...participants, participantName.trim()]);\n      setParticipantName(\"\");\n      enqueueSnackbar(\"Participant added!\", {\n        variant: \"success\"\n      });\n    } else {\n      enqueueSnackbar(\"Participant name is empty or already exists.\", {\n        variant: \"error\"\n      });\n    }\n  };\n  const handleRemoveParticipant = index => {\n    setParticipants(participants.filter((_, i) => i !== index));\n    enqueueSnackbar(\"Participant removed!\", {\n      variant: \"warning\"\n    });\n  };\n  const handleResetParticipants = () => {\n    setParticipants([]);\n    enqueueSnackbar(\"All participants reset!\", {\n      variant: \"info\"\n    });\n  };\n  const handleResetFoodItems = () => {\n    setFoodItems([]);\n    enqueueSnackbar(\"All food items reset!\", {\n      variant: \"info\"\n    });\n  };\n  const handleResetAllData = () => {\n    handleResetParticipants();\n    handleResetFoodItems();\n    enqueueSnackbar(\"All data has been reset!\", {\n      variant: \"info\"\n    });\n  };\n  const exampleFoodItems = [\n    // (Your existing food items)\n  ];\n  const handleAddFoodItem = () => {\n    const trimmedFoodName = foodName.trim(); // Trim food name\n\n    const newFoodItem = {\n      id: uuidv4(),\n      name: trimmedFoodName,\n      price: parseFloat(foodPrice) || 0,\n      participants: Object.keys(selectedParticipants).filter(name => selectedParticipants[name]),\n      splitPrice: Object.keys(selectedParticipants).length > 0 ? (parseFloat(foodPrice) / Object.keys(selectedParticipants).length).toFixed(2) : 0\n    };\n    if (trimmedFoodName && foodPrice) {\n      setFoodItems(prevItems => [...prevItems, newFoodItem]);\n      resetFoodInputs();\n      enqueueSnackbar(\"Food item added!\", {\n        variant: \"success\"\n      });\n\n      // Save to local storage\n      localStorage.setItem(\"foodItems\", JSON.stringify([...foodItems, newFoodItem]));\n\n      // Navigate to the food list after adding the food item\n      history.push(\"/food-list\"); // Change this to your food list route\n    } else {\n      enqueueSnackbar(\"Please enter a valid food name and price.\", {\n        variant: \"error\"\n      });\n    }\n  };\n  const resetFoodInputs = () => {\n    setFoodName(\"\");\n    setFoodPrice(\"\");\n    setSelectedParticipants({});\n    setEditingFoodId(null);\n  };\n  const handleEditFoodItem = food => {\n    setFoodName(food.name);\n    setFoodPrice(food.price);\n    setSelectedParticipants(participants.reduce((acc, participant) => {\n      acc[participant] = food.participants.includes(participant);\n      return acc;\n    }, {}));\n    setEditingFoodId(food.id);\n  };\n  const handleUpdateFoodItem = () => {\n    if (editingFoodId) {\n      const updatedFoodItems = foodItems.map(food => {\n        if (food.id === editingFoodId) {\n          const splitPrice = (parseFloat(foodPrice) / Object.keys(selectedParticipants).length).toFixed(2);\n          return {\n            ...food,\n            name: foodName,\n            price: parseFloat(foodPrice),\n            participants: Object.keys(selectedParticipants),\n            splitPrice\n          };\n        }\n        return food;\n      });\n      setFoodItems(updatedFoodItems);\n      resetFoodInputs();\n      enqueueSnackbar(\"Food item updated!\", {\n        variant: \"success\"\n      });\n    }\n  };\n  const handleRemoveFoodItem = id => {\n    setFoodItems(foodItems.filter(item => item.id !== id));\n    enqueueSnackbar(\"Food item removed!\", {\n      variant: \"warning\"\n    });\n  };\n  const handleSelectParticipant = name => {\n    setSelectedParticipants(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  const totalSummary = foodItems.reduce((acc, food) => {\n    food.participants.forEach(participant => {\n      acc[participant] = (acc[participant] || 0) + parseFloat(food.splitPrice);\n    });\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    sx: {\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 2,\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 0.6\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        color: \"primary\",\n        children: \"Check Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2,\n        mb: 3,\n        borderRadius: 2,\n        boxShadow: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        color: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(RestaurantMenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), \" Add Food Items\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            freeSolo: true,\n            options: exampleFoodItems,\n            value: foodName,\n            onChange: (event, newValue) => setFoodName(newValue),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Food Name\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Price (\\u0E3F)\",\n            type: \"number\",\n            value: foodPrice,\n            onChange: e => setFoodPrice(e.target.value),\n            fullWidth: true,\n            inputProps: {\n              min: 0\n            },\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          mt: 2\n        },\n        children: \"Select Participants to Split the Bill:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          mt: 1\n        },\n        children: participants.map(name => /*#__PURE__*/_jsxDEV(Chip, {\n          label: name,\n          onClick: () => handleSelectParticipant(name),\n          sx: {\n            m: 0.5,\n            backgroundColor: selectedParticipants[name] ? \"#FF6F61\" : \"rgba(0, 0, 0, 0.12)\",\n            color: selectedParticipants[name] ? \"white\" : \"black\",\n            \"&:hover\": {\n              backgroundColor: selectedParticipants[name] ? \"#FF4B3A\" : \"rgba(0, 0, 0, 0.2)\"\n            }\n          }\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), editingFoodId ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleUpdateFoodItem,\n        fullWidth: true,\n        sx: {\n          mt: 2\n        },\n        children: \"Update Food Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddFoodItem,\n        fullWidth: true,\n        sx: {\n          mt: 2\n        },\n        children: \"Add Food Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: handleResetAllData,\n      fullWidth: true,\n      children: \"Reset All Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckBill, \"PGSAHkCpy/tOkpwe68wff9sieTs=\", false, function () {\n  return [useHistory, useSnackbar];\n});\n_c = CheckBill;\nexport default CheckBill;\nvar _c;\n$RefreshReg$(_c, \"CheckBill\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","List","ListItem","ListItemText","Typography","Grid","Paper","Chip","Box","IconButton","EditIcon","DeleteIcon","motion","AddIcon","RestaurantMenuIcon","PersonIcon","useSnackbar","v4","uuidv4","Autocomplete","useHistory","jsxDEV","_jsxDEV","loadFromLocalStorage","key","data","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","CheckBill","_s","history","enqueueSnackbar","participants","setParticipants","participantName","setParticipantName","foodItems","setFoodItems","foodName","setFoodName","foodPrice","setFoodPrice","selectedParticipants","setSelectedParticipants","editingFoodId","setEditingFoodId","storedFoodItems","handleAddParticipant","trim","includes","variant","handleRemoveParticipant","index","filter","_","i","handleResetParticipants","handleResetFoodItems","handleResetAllData","exampleFoodItems","handleAddFoodItem","trimmedFoodName","newFoodItem","id","name","price","parseFloat","Object","keys","splitPrice","length","toFixed","prevItems","resetFoodInputs","push","handleEditFoodItem","food","reduce","acc","participant","handleUpdateFoodItem","updatedFoodItems","map","handleRemoveFoodItem","item","handleSelectParticipant","prev","totalSummary","forEach","p","sx","backgroundColor","borderRadius","boxShadow","children","div","initial","opacity","animate","transition","duration","align","gutterBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","elevation","mb","container","spacing","alignItems","xs","freeSolo","options","value","onChange","event","newValue","renderInput","params","label","type","e","target","fullWidth","inputProps","min","mt","display","flexWrap","onClick","m","_c","$RefreshReg$"],"sources":["/Users/dolpeeradol/Desktop/General/Deploy_Project/glaharnV2/src/components/Checkbill.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Grid,\n  Paper,\n  Chip,\n  Box,\n  IconButton,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { motion } from \"framer-motion\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RestaurantMenuIcon from \"@mui/icons-material/RestaurantMenu\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { useSnackbar } from \"notistack\";\nimport { v4 as uuidv4 } from \"uuid\"; // For unique IDs\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory\n\nconst loadFromLocalStorage = (key) => {\n  const data = localStorage.getItem(key);\n  return data ? JSON.parse(data) : [];\n};\n\nconst saveToLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nconst CheckBill = () => {\n  const history = useHistory(); // Initialize useHistory\n  const { enqueueSnackbar } = useSnackbar();\n  const [participants, setParticipants] = useState(loadFromLocalStorage(\"participants\"));\n  const [participantName, setParticipantName] = useState(\"\");\n  const [foodItems, setFoodItems] = useState(loadFromLocalStorage(\"foodItems\"));\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodPrice, setFoodPrice] = useState(\"\");\n  const [selectedParticipants, setSelectedParticipants] = useState({});\n  const [editingFoodId, setEditingFoodId] = useState(null);\n\n  useEffect(() => {\n    saveToLocalStorage(\"participants\", participants);\n    saveToLocalStorage(\"foodItems\", foodItems);\n  }, [participants, foodItems]);\n\n  useEffect(() => {\n    const storedFoodItems = JSON.parse(localStorage.getItem(\"foodItems\")) || [];\n    setFoodItems(storedFoodItems);\n  }, []);\n\n  const handleAddParticipant = () => {\n    if (participantName.trim() && !participants.includes(participantName.trim())) {\n      setParticipants([...participants, participantName.trim()]);\n      setParticipantName(\"\");\n      enqueueSnackbar(\"Participant added!\", { variant: \"success\" });\n    } else {\n      enqueueSnackbar(\"Participant name is empty or already exists.\", { variant: \"error\" });\n    }\n  };\n\n  const handleRemoveParticipant = (index) => {\n    setParticipants(participants.filter((_, i) => i !== index));\n    enqueueSnackbar(\"Participant removed!\", { variant: \"warning\" });\n  };\n\n  const handleResetParticipants = () => {\n    setParticipants([]);\n    enqueueSnackbar(\"All participants reset!\", { variant: \"info\" });\n  };\n\n  const handleResetFoodItems = () => {\n    setFoodItems([]);\n    enqueueSnackbar(\"All food items reset!\", { variant: \"info\" });\n  };\n\n  const handleResetAllData = () => {\n    handleResetParticipants();\n    handleResetFoodItems();\n    enqueueSnackbar(\"All data has been reset!\", { variant: \"info\" });\n  };\n\n  const exampleFoodItems = [\n    // (Your existing food items)\n  ];\n\n  const handleAddFoodItem = () => {\n    const trimmedFoodName = foodName.trim(); // Trim food name\n\n    const newFoodItem = {\n      id: uuidv4(),\n      name: trimmedFoodName,\n      price: parseFloat(foodPrice) || 0,\n      participants: Object.keys(selectedParticipants).filter((name) => selectedParticipants[name]),\n      splitPrice: Object.keys(selectedParticipants).length > 0\n        ? (parseFloat(foodPrice) / Object.keys(selectedParticipants).length).toFixed(2)\n        : 0,\n    };\n\n    if (trimmedFoodName && foodPrice) {\n      setFoodItems((prevItems) => [...prevItems, newFoodItem]);\n      resetFoodInputs();\n      enqueueSnackbar(\"Food item added!\", { variant: \"success\" });\n\n      // Save to local storage\n      localStorage.setItem(\"foodItems\", JSON.stringify([...foodItems, newFoodItem]));\n\n      // Navigate to the food list after adding the food item\n      history.push(\"/food-list\"); // Change this to your food list route\n    } else {\n      enqueueSnackbar(\"Please enter a valid food name and price.\", { variant: \"error\" });\n    }\n  };\n\n  const resetFoodInputs = () => {\n    setFoodName(\"\");\n    setFoodPrice(\"\");\n    setSelectedParticipants({});\n    setEditingFoodId(null);\n  };\n\n  const handleEditFoodItem = (food) => {\n    setFoodName(food.name);\n    setFoodPrice(food.price);\n    setSelectedParticipants(\n      participants.reduce((acc, participant) => {\n        acc[participant] = food.participants.includes(participant);\n        return acc;\n      }, {})\n    );\n    setEditingFoodId(food.id);\n  };\n\n  const handleUpdateFoodItem = () => {\n    if (editingFoodId) {\n      const updatedFoodItems = foodItems.map((food) => {\n        if (food.id === editingFoodId) {\n          const splitPrice = (parseFloat(foodPrice) / Object.keys(selectedParticipants).length).toFixed(2);\n          return {\n            ...food,\n            name: foodName,\n            price: parseFloat(foodPrice),\n            participants: Object.keys(selectedParticipants),\n            splitPrice,\n          };\n        }\n        return food;\n      });\n\n      setFoodItems(updatedFoodItems);\n      resetFoodInputs();\n      enqueueSnackbar(\"Food item updated!\", { variant: \"success\" });\n    }\n  };\n\n  const handleRemoveFoodItem = (id) => {\n    setFoodItems(foodItems.filter((item) => item.id !== id));\n    enqueueSnackbar(\"Food item removed!\", { variant: \"warning\" });\n  };\n\n  const handleSelectParticipant = (name) => {\n    setSelectedParticipants((prev) => ({\n      ...prev,\n      [name]: !prev[name],\n    }));\n  };\n\n  const totalSummary = foodItems.reduce((acc, food) => {\n    food.participants.forEach((participant) => {\n      acc[participant] = (acc[participant] || 0) + parseFloat(food.splitPrice);\n    });\n    return acc;\n  }, {});\n\n  return (\n    <Box p={3} sx={{ backgroundColor: \"#f9f9f9\", borderRadius: 2, boxShadow: 3 }}>\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.6 }}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom color=\"primary\">\n          Check Bill\n        </Typography>\n      </motion.div>\n\n      {/* Add Participants Section */}\n      {/* (Your existing participants section) */}\n\n      {/* Add Food Items Section */}\n      <Paper elevation={3} sx={{ p: 2, mb: 3, borderRadius: 2, boxShadow: 5 }}>\n        <Typography variant=\"h6\" sx={{ mb: 2 }} color=\"secondary\">\n          <RestaurantMenuIcon /> Add Food Items\n        </Typography>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={6}>\n            <Autocomplete\n              freeSolo\n              options={exampleFoodItems}\n              value={foodName}\n              onChange={(event, newValue) => setFoodName(newValue)}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Food Name\" variant=\"outlined\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Price (฿)\"\n              type=\"number\"\n              value={foodPrice}\n              onChange={(e) => setFoodPrice(e.target.value)}\n              fullWidth\n              inputProps={{ min: 0 }}\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n        <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>\n          Select Participants to Split the Bill:\n        </Typography>\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", mt: 1 }}>\n          {participants.map((name) => (\n            <Chip\n              key={name}\n              label={name}\n              onClick={() => handleSelectParticipant(name)}\n              sx={{\n                m: 0.5,\n                backgroundColor: selectedParticipants[name] ? \"#FF6F61\" : \"rgba(0, 0, 0, 0.12)\",\n                color: selectedParticipants[name] ? \"white\" : \"black\",\n                \"&:hover\": {\n                  backgroundColor: selectedParticipants[name] ? \"#FF4B3A\" : \"rgba(0, 0, 0, 0.2)\",\n                },\n              }}\n            />\n          ))}\n        </Box>\n        {editingFoodId ? (\n          <Button variant=\"contained\" color=\"primary\" onClick={handleUpdateFoodItem} fullWidth sx={{ mt: 2 }}>\n            Update Food Item\n          </Button>\n        ) : (\n          <Button variant=\"contained\" color=\"primary\" onClick={handleAddFoodItem} fullWidth sx={{ mt: 2 }}>\n            Add Food Item\n          </Button>\n        )}\n      </Paper>\n\n      {/* Food Items List Section */}\n      {/* (Your existing food items list) */}\n\n      {/* Summary Section */}\n      {/* (Your existing summary section) */}\n\n      {/* Reset All Data Button */}\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleResetAllData} fullWidth>\n        Reset All Data\n      </Button>\n    </Box>\n  );\n};\n\nexport default CheckBill;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}