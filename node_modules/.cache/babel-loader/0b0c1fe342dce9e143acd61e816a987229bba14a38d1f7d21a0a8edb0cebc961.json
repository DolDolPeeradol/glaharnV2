{"ast":null,"code":"var _jsxFileName = \"/Users/dolpeeradol/Desktop/General/Deploy_Project/glaharnV2/src/components/StatusDebtor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Typography, Paper, TextField, Accordion, AccordionSummary, AccordionDetails, Button } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { styled } from \"@mui/system\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Container)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  [theme.breakpoints.down(\"sm\")]: {\n    padding: theme.spacing(1)\n  }\n}));\n_c = StyledContainer;\nconst ResponsiveAccordion = styled(Accordion)(({\n  theme\n}) => ({\n  width: \"100%\",\n  marginBottom: theme.spacing(1),\n  [theme.breakpoints.down(\"sm\")]: {\n    marginBottom: theme.spacing(0.5)\n  }\n}));\n_c2 = ResponsiveAccordion;\nexport default function StatusDebtor() {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [totalAmounts, setTotalAmounts] = useState({});\n  const [payments, setPayments] = useState({});\n  const [status, setStatus] = useState({});\n  const [paymentHistory, setPaymentHistory] = useState({});\n  const [tempPayments, setTempPayments] = useState({});\n  const [editHistory, setEditHistory] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedParticipants = JSON.parse(localStorage.getItem(\"participants\")) || [];\n    const storedTotalAmounts = JSON.parse(localStorage.getItem(\"totalAmounts\")) || {};\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\")) || {};\n    const storedHistory = JSON.parse(localStorage.getItem(\"paymentHistory\")) || {};\n    setParticipants(storedParticipants);\n    setTotalAmounts(storedTotalAmounts);\n    setPayments(storedPayments);\n    setPaymentHistory(storedHistory);\n    const initialStatus = {};\n    storedParticipants.forEach(participant => {\n      initialStatus[participant] = \"Pending\";\n    });\n    setStatus(initialStatus);\n  }, []);\n  const handlePaymentChange = (participant, amount) => {\n    const parsedAmount = parseFloat(amount);\n    if (parsedAmount < 0) {\n      alert(\"Please enter a positive amount.\");\n      return;\n    }\n    const updatedTempPayments = {\n      ...tempPayments,\n      [participant]: parsedAmount || \"\"\n    };\n    setTempPayments(updatedTempPayments);\n  };\n  const handleSubmitPayment = participant => {\n    const paymentAmount = parseFloat(tempPayments[participant]) || 0;\n    const updatedPayments = {\n      ...payments,\n      [participant]: (payments[participant] || 0) + paymentAmount\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n    const newPaymentHistory = {\n      ...paymentHistory\n    };\n    if (!newPaymentHistory[participant]) {\n      newPaymentHistory[participant] = [];\n    }\n    newPaymentHistory[participant].push({\n      amount: paymentAmount,\n      date: new Date().toLocaleDateString()\n    });\n    setPaymentHistory(newPaymentHistory);\n    localStorage.setItem(\"paymentHistory\", JSON.stringify(newPaymentHistory));\n    setStatus(prevStatus => {\n      var _totalAmounts$partici;\n      return {\n        ...prevStatus,\n        [participant]: updatedPayments[participant] >= (((_totalAmounts$partici = totalAmounts[participant]) === null || _totalAmounts$partici === void 0 ? void 0 : _totalAmounts$partici.total) || 0) ? \"Paid\" : \"Pending\"\n      };\n    });\n    setTempPayments(prev => ({\n      ...prev,\n      [participant]: \"\"\n    }));\n  };\n  const calculateRemaining = participant => {\n    var _totalAmounts$partici2;\n    const totalAmount = ((_totalAmounts$partici2 = totalAmounts[participant]) === null || _totalAmounts$partici2 === void 0 ? void 0 : _totalAmounts$partici2.total) || 0;\n    const paidAmount = payments[participant] || 0;\n    return totalAmount - paidAmount;\n  };\n  const handleResetHistory = () => {\n    setPaymentHistory({});\n    setPayments({});\n    localStorage.removeItem(\"payments\");\n    localStorage.removeItem(\"paymentHistory\");\n    const resetStatus = {};\n    participants.forEach(participant => {\n      resetStatus[participant] = \"Pending\";\n    });\n    setStatus(resetStatus);\n  };\n  const handleEditHistory = (participant, index, amount) => {\n    const parsedAmount = parseFloat(amount);\n    if (parsedAmount <= 0) {\n      alert(\"Please enter a positive amount.\");\n      return;\n    }\n    const updatedHistory = [...paymentHistory[participant]];\n    const previousAmount = updatedHistory[index].amount;\n    updatedHistory[index].amount = parsedAmount;\n    const newPaymentHistory = {\n      ...paymentHistory,\n      [participant]: updatedHistory\n    };\n    setPaymentHistory(newPaymentHistory);\n    localStorage.setItem(\"paymentHistory\", JSON.stringify(newPaymentHistory));\n    const updatedPayment = (payments[participant] || 0) - previousAmount + parsedAmount;\n    const updatedPayments = {\n      ...payments,\n      [participant]: updatedPayment\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n    setStatus(prevStatus => {\n      var _totalAmounts$partici3;\n      return {\n        ...prevStatus,\n        [participant]: updatedPayments[participant] >= (((_totalAmounts$partici3 = totalAmounts[participant]) === null || _totalAmounts$partici3 === void 0 ? void 0 : _totalAmounts$partici3.total) || 0) ? \"Paid\" : \"Pending\"\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    maxWidth: \"md\",\n    children: participants.length === 0 || Object.keys(totalAmounts).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        color: \"error\",\n        gutterBottom: true,\n        children: \"Please fill out the Summary information first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => navigate(\"/summary\") // Go to Summary.js\n        ,\n        children: \"Go to Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        color: \"white\",\n        children: \"Debtor Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: handleResetHistory,\n        sx: {\n          marginBottom: 2\n        },\n        children: \"Reset All History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: participants.map(participant => {\n          var _totalAmounts$partici4, _totalAmounts$partici5, _paymentHistory$parti;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              sx: {\n                padding: 2,\n                marginBottom: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Amount Owed: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), typeof ((_totalAmounts$partici4 = totalAmounts[participant]) === null || _totalAmounts$partici4 === void 0 ? void 0 : _totalAmounts$partici4.total) === \"number\" && !isNaN((_totalAmounts$partici5 = totalAmounts[participant]) === null || _totalAmounts$partici5 === void 0 ? void 0 : _totalAmounts$partici5.total) ? totalAmounts[participant].total.toFixed(2) + \" ฿\" : \"0.00 ฿\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Amount Paid: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), typeof payments[participant] === \"number\" && !isNaN(payments[participant]) ? payments[participant].toFixed(2) + \" ฿\" : \"0.00 ฿\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Remaining: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), calculateRemaining(participant).toFixed(2), \" \\u0E3F\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: status[participant] === \"Paid\" ? \"green\" : \"red\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), status[participant]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ResponsiveAccordion, {\n                children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                  expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 51\n                  }, this),\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Payment History\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                  children: ((_paymentHistory$parti = paymentHistory[participant]) === null || _paymentHistory$parti === void 0 ? void 0 : _paymentHistory$parti.length) > 0 ? paymentHistory[participant].map((payment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      children: [payment.date, \":\", \" \", typeof payment.amount === \"number\" && !isNaN(payment.amount) ? payment.amount.toFixed(2) : \"0.00\", \" \", \"\\u0E3F\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      type: \"number\",\n                      label: \"Edit Amount\",\n                      variant: \"outlined\",\n                      size: \"small\",\n                      onChange: e => {\n                        const amount = e.target.value;\n                        setEditHistory(prev => ({\n                          ...prev,\n                          [`${participant}-${index}`]: amount\n                        }));\n                      },\n                      sx: {\n                        width: \"100%\",\n                        marginBottom: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: () => handleEditHistory(participant, index, editHistory[`${participant}-${index}`]),\n                      size: \"small\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 27\n                  }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"No history available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                label: \"Payment\",\n                variant: \"outlined\",\n                size: \"small\",\n                onChange: e => handlePaymentChange(participant, e.target.value),\n                sx: {\n                  width: \"100%\",\n                  marginBottom: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleSubmitPayment(participant),\n                children: \"Submit Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, participant, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusDebtor, \"gAu5JuM5kywU6mjh2oHzIRTz8fk=\", false, function () {\n  return [useNavigate];\n});\n_c3 = StatusDebtor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"ResponsiveAccordion\");\n$RefreshReg$(_c3, \"StatusDebtor\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Typography","Paper","TextField","Accordion","AccordionSummary","AccordionDetails","Button","ExpandMoreIcon","styled","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledContainer","theme","padding","spacing","breakpoints","down","_c","ResponsiveAccordion","width","marginBottom","_c2","StatusDebtor","_s","participants","setParticipants","totalAmounts","setTotalAmounts","payments","setPayments","status","setStatus","paymentHistory","setPaymentHistory","tempPayments","setTempPayments","editHistory","setEditHistory","navigate","storedParticipants","JSON","parse","localStorage","getItem","storedTotalAmounts","storedPayments","storedHistory","initialStatus","forEach","participant","handlePaymentChange","amount","parsedAmount","parseFloat","alert","updatedTempPayments","handleSubmitPayment","paymentAmount","updatedPayments","setItem","stringify","newPaymentHistory","push","date","Date","toLocaleDateString","prevStatus","_totalAmounts$partici","total","prev","calculateRemaining","_totalAmounts$partici2","totalAmount","paidAmount","handleResetHistory","removeItem","resetStatus","handleEditHistory","index","updatedHistory","previousAmount","updatedPayment","_totalAmounts$partici3","maxWidth","children","length","Object","keys","style","textAlign","variant","align","color","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","container","map","_totalAmounts$partici4","_totalAmounts$partici5","_paymentHistory$parti","item","xs","sm","elevation","isNaN","toFixed","expandIcon","payment","type","label","size","onChange","e","target","value","_c3","$RefreshReg$"],"sources":["/Users/dolpeeradol/Desktop/General/Deploy_Project/glaharnV2/src/components/StatusDebtor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  Paper,\n  TextField,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { styled } from \"@mui/system\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  padding: theme.spacing(2),\n  [theme.breakpoints.down(\"sm\")]: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst ResponsiveAccordion = styled(Accordion)(({ theme }) => ({\n  width: \"100%\",\n  marginBottom: theme.spacing(1),\n  [theme.breakpoints.down(\"sm\")]: {\n    marginBottom: theme.spacing(0.5),\n  },\n}));\n\nexport default function StatusDebtor() {\n  const [participants, setParticipants] = useState([]);\n  const [totalAmounts, setTotalAmounts] = useState({});\n  const [payments, setPayments] = useState({});\n  const [status, setStatus] = useState({});\n  const [paymentHistory, setPaymentHistory] = useState({});\n  const [tempPayments, setTempPayments] = useState({});\n  const [editHistory, setEditHistory] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedParticipants =\n      JSON.parse(localStorage.getItem(\"participants\")) || [];\n    const storedTotalAmounts =\n      JSON.parse(localStorage.getItem(\"totalAmounts\")) || {};\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\")) || {};\n    const storedHistory =\n      JSON.parse(localStorage.getItem(\"paymentHistory\")) || {};\n\n    setParticipants(storedParticipants);\n    setTotalAmounts(storedTotalAmounts);\n    setPayments(storedPayments);\n    setPaymentHistory(storedHistory);\n\n    const initialStatus = {};\n    storedParticipants.forEach((participant) => {\n      initialStatus[participant] = \"Pending\";\n    });\n    setStatus(initialStatus);\n  }, []);\n\n  const handlePaymentChange = (participant, amount) => {\n    const parsedAmount = parseFloat(amount);\n    if (parsedAmount < 0) {\n      alert(\"Please enter a positive amount.\");\n      return;\n    }\n\n    const updatedTempPayments = {\n      ...tempPayments,\n      [participant]: parsedAmount || \"\",\n    };\n    setTempPayments(updatedTempPayments);\n  };\n\n  const handleSubmitPayment = (participant) => {\n    const paymentAmount = parseFloat(tempPayments[participant]) || 0;\n\n    const updatedPayments = {\n      ...payments,\n      [participant]: (payments[participant] || 0) + paymentAmount,\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n\n    const newPaymentHistory = { ...paymentHistory };\n    if (!newPaymentHistory[participant]) {\n      newPaymentHistory[participant] = [];\n    }\n    newPaymentHistory[participant].push({\n      amount: paymentAmount,\n      date: new Date().toLocaleDateString(),\n    });\n    setPaymentHistory(newPaymentHistory);\n    localStorage.setItem(\"paymentHistory\", JSON.stringify(newPaymentHistory));\n\n    setStatus((prevStatus) => ({\n      ...prevStatus,\n      [participant]:\n        updatedPayments[participant] >= (totalAmounts[participant]?.total || 0)\n          ? \"Paid\"\n          : \"Pending\",\n    }));\n\n    setTempPayments((prev) => ({ ...prev, [participant]: \"\" }));\n  };\n\n  const calculateRemaining = (participant) => {\n    const totalAmount = totalAmounts[participant]?.total || 0;\n    const paidAmount = payments[participant] || 0;\n    return totalAmount - paidAmount;\n  };\n\n  const handleResetHistory = () => {\n    setPaymentHistory({});\n    setPayments({});\n    localStorage.removeItem(\"payments\");\n    localStorage.removeItem(\"paymentHistory\");\n\n    const resetStatus = {};\n    participants.forEach((participant) => {\n      resetStatus[participant] = \"Pending\";\n    });\n    setStatus(resetStatus);\n  };\n\n  const handleEditHistory = (participant, index, amount) => {\n    const parsedAmount = parseFloat(amount);\n    if (parsedAmount <= 0) {\n      alert(\"Please enter a positive amount.\");\n      return;\n    }\n\n    const updatedHistory = [...paymentHistory[participant]];\n    const previousAmount = updatedHistory[index].amount;\n    updatedHistory[index].amount = parsedAmount;\n\n    const newPaymentHistory = {\n      ...paymentHistory,\n      [participant]: updatedHistory,\n    };\n    setPaymentHistory(newPaymentHistory);\n    localStorage.setItem(\"paymentHistory\", JSON.stringify(newPaymentHistory));\n\n    const updatedPayment = (payments[participant] || 0) - previousAmount + parsedAmount;\n    const updatedPayments = {\n      ...payments,\n      [participant]: updatedPayment,\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n\n    setStatus((prevStatus) => ({\n      ...prevStatus,\n      [participant]:\n        updatedPayments[participant] >= (totalAmounts[participant]?.total || 0)\n          ? \"Paid\"\n          : \"Pending\",\n    }));\n  };\n\n  return (\n    <StyledContainer maxWidth=\"md\">\n      {participants.length === 0 || Object.keys(totalAmounts).length === 0 ? (\n        <div style={{ textAlign: \"center\" }}>\n          <Typography variant=\"h5\" align=\"center\" color=\"error\" gutterBottom>\n            Please fill out the Summary information first.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => navigate(\"/summary\")} // Go to Summary.js\n          >\n            Go to Summary\n          </Button>\n        </div>\n      ) : (\n        <>\n          <Typography variant=\"h4\" align=\"center\" gutterBottom color=\"white\">\n            Debtor Status\n          </Typography>\n\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleResetHistory}\n            sx={{ marginBottom: 2 }}\n          >\n            Reset All History\n          </Button>\n\n          <Grid container spacing={2}>\n            {participants.map((participant) => (\n              <Grid item xs={12} sm={6} key={participant}>\n                <Paper elevation={3} sx={{ padding: 2, marginBottom: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {participant}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    <strong>Amount Owed: </strong>\n                    {typeof totalAmounts[participant]?.total === \"number\" &&\n                    !isNaN(totalAmounts[participant]?.total)\n                      ? totalAmounts[participant].total.toFixed(2) + \" ฿\"\n                      : \"0.00 ฿\"}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    <strong>Amount Paid: </strong>\n                    {typeof payments[participant] === \"number\" &&\n                    !isNaN(payments[participant])\n                      ? payments[participant].toFixed(2) + \" ฿\"\n                      : \"0.00 ฿\"}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    <strong>Remaining: </strong>\n                    {calculateRemaining(participant).toFixed(2)} ฿\n                  </Typography>\n                  <Typography\n                    variant=\"body1\"\n                    color={status[participant] === \"Paid\" ? \"green\" : \"red\"}\n                  >\n                    <strong>Status: </strong>\n                    {status[participant]}\n                  </Typography>\n\n                  <ResponsiveAccordion>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                      <Typography>Payment History</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      {paymentHistory[participant]?.length > 0 ? (\n                        paymentHistory[participant].map((payment, index) => (\n                          <div key={index}>\n                            <Typography>\n                              {payment.date}:{\" \"}\n                              {typeof payment.amount === \"number\" &&\n                              !isNaN(payment.amount)\n                                ? payment.amount.toFixed(2)\n                                : \"0.00\"}{\" \"}\n                              ฿\n                            </Typography>\n                            <TextField\n                              type=\"number\"\n                              label=\"Edit Amount\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              onChange={(e) => {\n                                const amount = e.target.value;\n                                setEditHistory((prev) => ({\n                                  ...prev,\n                                  [`${participant}-${index}`]: amount,\n                                }));\n                              }}\n                              sx={{ width: \"100%\", marginBottom: 1 }}\n                            />\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                handleEditHistory(\n                                  participant,\n                                  index,\n                                  editHistory[`${participant}-${index}`]\n                                )\n                              }\n                              size=\"small\"\n                            >\n                              Edit\n                            </Button>\n                          </div>\n                        ))\n                      ) : (\n                        <Typography>No history available</Typography>\n                      )}\n                    </AccordionDetails>\n                  </ResponsiveAccordion>\n\n                  <TextField\n                    type=\"number\"\n                    label=\"Payment\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onChange={(e) => handlePaymentChange(participant, e.target.value)}\n                    sx={{ width: \"100%\", marginBottom: 1 }}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleSubmitPayment(participant)}\n                  >\n                    Submit Payment\n                  </Button>\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n    </StyledContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}