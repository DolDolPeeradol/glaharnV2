{"ast":null,"code":"var _jsxFileName = \"/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/StatusDebtor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Paper, TextField } from \"@mui/material\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StatusDebtor() {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [totalAmounts, setTotalAmounts] = useState({}); // Assuming this stores food data and total price for each participant\n  const [payments, setPayments] = useState({});\n  useEffect(() => {\n    // Fetch data from localStorage\n    const storedParticipants = JSON.parse(localStorage.getItem(\"participants\")) || [];\n    const storedTotalAmounts = JSON.parse(localStorage.getItem(\"totalAmounts\")) || {}; // Fetch split price and food data\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\")) || {};\n    setParticipants(storedParticipants);\n    setTotalAmounts(storedTotalAmounts); // Setting up the total amounts for participants\n    setPayments(storedPayments);\n  }, []);\n  const handlePaymentChange = (participant, amount) => {\n    const updatedPayments = {\n      ...payments,\n      [participant]: parseFloat(amount) || 0\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n  };\n  const calculateRemaining = participant => {\n    var _totalAmounts$partici;\n    return (((_totalAmounts$partici = totalAmounts[participant]) === null || _totalAmounts$partici === void 0 ? void 0 : _totalAmounts$partici.total) || 0) - (payments[participant] || 0); // Calculate remaining balance\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Status of Debtors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Participant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount Owed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Update Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: participants.map(participant => {\n            var _totalAmounts$partici2;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (_totalAmounts$partici2 = totalAmounts[participant]) !== null && _totalAmounts$partici2 !== void 0 && _totalAmounts$partici2.foods ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [totalAmounts[participant].foods.map((food, foodIndex) => /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"- \", food.name, \": \", food.price.toFixed(2), \" B\"]\n                  }, foodIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [\"Total: \", totalAmounts[participant].total.toFixed(2), \" B\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: payments[participant] ? payments[participant].toFixed(2) : \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: calculateRemaining(participant).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  label: \"Payment\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  value: payments[participant] || \"\",\n                  onChange: e => handlePaymentChange(participant, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, participant, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusDebtor, \"x3AsR2F9h8Xv0d8ljJyUJjyOjlI=\");\n_c = StatusDebtor;\nvar _c;\n$RefreshReg$(_c, \"StatusDebtor\");","map":{"version":3,"names":["React","useState","useEffect","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","TextField","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","StatusDebtor","_s","participants","setParticipants","totalAmounts","setTotalAmounts","payments","setPayments","storedParticipants","JSON","parse","localStorage","getItem","storedTotalAmounts","storedPayments","handlePaymentChange","participant","amount","updatedPayments","parseFloat","setItem","stringify","calculateRemaining","_totalAmounts$partici","total","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","map","_totalAmounts$partici2","foods","food","foodIndex","name","price","toFixed","type","label","size","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/dolpeeradol/Desktop/General/Project_Dollar/glaharn/src/components/StatusDebtor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Paper,\n  TextField,\n} from \"@mui/material\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function StatusDebtor() {\n  const [participants, setParticipants] = useState([]);\n  const [totalAmounts, setTotalAmounts] = useState({}); // Assuming this stores food data and total price for each participant\n  const [payments, setPayments] = useState({});\n\n  useEffect(() => {\n    // Fetch data from localStorage\n    const storedParticipants =\n      JSON.parse(localStorage.getItem(\"participants\")) || [];\n    const storedTotalAmounts = JSON.parse(localStorage.getItem(\"totalAmounts\")) || {}; // Fetch split price and food data\n    const storedPayments = JSON.parse(localStorage.getItem(\"payments\")) || {};\n\n    setParticipants(storedParticipants);\n    setTotalAmounts(storedTotalAmounts); // Setting up the total amounts for participants\n    setPayments(storedPayments);\n  }, []);\n\n  const handlePaymentChange = (participant, amount) => {\n    const updatedPayments = {\n      ...payments,\n      [participant]: parseFloat(amount) || 0,\n    };\n    setPayments(updatedPayments);\n    localStorage.setItem(\"payments\", JSON.stringify(updatedPayments));\n  };\n\n  const calculateRemaining = (participant) => {\n    return (totalAmounts[participant]?.total || 0) - (payments[participant] || 0); // Calculate remaining balance\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Status of Debtors\n      </Typography>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Participant</TableCell>\n              <TableCell>Amount Owed</TableCell>\n              <TableCell>Amount Paid</TableCell>\n              <TableCell>Remaining</TableCell>\n              <TableCell>Update Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {participants.map((participant) => (\n              <TableRow key={participant}>\n                <TableCell>{participant}</TableCell>\n                <TableCell>\n                  {totalAmounts[participant]?.foods ? (\n                    <>\n                      {totalAmounts[participant].foods.map((food, foodIndex) => (\n                        <Typography key={foodIndex} variant=\"body2\">\n                          - {food.name}: {food.price.toFixed(2)} B\n                        </Typography>\n                      ))}\n                      <Typography variant=\"body1\">\n                        Total: {totalAmounts[participant].total.toFixed(2)} B\n                      </Typography>\n                    </>\n                  ) : (\n                    \"0.00\"\n                  )}\n                </TableCell>\n                <TableCell>\n                  {payments[participant] ? payments[participant].toFixed(2) : \"0.00\"}\n                </TableCell>\n                <TableCell>\n                  {calculateRemaining(participant).toFixed(2)}\n                </TableCell>\n                <TableCell>\n                  <TextField\n                    type=\"number\"\n                    label=\"Payment\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={payments[participant] || \"\"}\n                    onChange={(e) =>\n                      handlePaymentChange(participant, e.target.value)\n                    }\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ToastContainer />\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}